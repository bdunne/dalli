# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Ruby CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        ruby-version: [2.5, 2.6, 2.7, jruby]

    services:
      memcached:
        image: docker.io/manageiq/memcached:latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Ruby ${{ matrix.ruby-version }}
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby-version }}
      - name: Install dependencies
        run: bundle install
      - name: Run tests
        run: bundle exec rake





# name: Dalli Gem
# on: push

# jobs:
#   # Label of the container job
#   ci-job:
#     # Containers must run in Linux based operating systems
#     runs-on: ubuntu-latest
#     # Docker Hub image that `container-job` executes in
#     container: node:10.18-jessie

#     # Service containers to run with `container-job`
#     services:
#       memcached:
#         image: docker.io/manageiq/memcached:latest
#         env:

#     steps:
#       # Downloads a copy of the code in your repository before running CI tests
#       - name: Check out repository code
#         uses: actions/checkout@v2

#       # Performs a clean installation of all dependencies in the `package.json` file
#       # For more information, see https://docs.npmjs.com/cli/ci.html
#       - name: Install dependencies
#         run: npm ci

#       - name: Connect to PostgreSQL
#         # Runs a script that creates a PostgreSQL table, populates
#         # the table with data, and then retrieves the data.
#         run: node client.js
#         # Environment variables used by the `client.js` script to create a new PostgreSQL table.
#         env:
#           # The hostname used to communicate with the PostgreSQL service container
#           POSTGRES_HOST: postgres
#           # The default PostgreSQL port
#           POSTGRES_PORT: 5432